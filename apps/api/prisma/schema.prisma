// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model User {
  id       String  @id @unique @default(cuid())
  email String  @unique
  name String

  emailVarified Boolean @default(false)
  password String  @unique
 avatar   Avatar? @relation(fields: [avatarId], references: [id])
  avatarId String?

  role     Role

  UserSpace UserSpace[]
}
model UserSpace {
  id       String    @id @default(cuid())
  userId   String
  spaceId  String
  role     SpaceRole
  User     User      @relation(fields: [userId], references: [id])
  Space    Space     @relation(fields: [spaceId], references: [id])
  @@unique([userId, spaceId])
}

model Space {
  id        String  @id @unique @default(cuid())
  name      String
  width     Int
  height    Int?
  
  backgroundImagePath String?
  thumbnail String?

  SpaceElement SpaceElement[]

  UserSpace UserSpace[]
}

model SpaceElement {
  id        String @id @unique @default(cuid())
  elementId String
  spaceId   String
  x         Int
  y         Int
  Space     Space  @relation(fields: [spaceId], references: [id])
  Element   Element @relation(fields: [elementId], references: [id])
  @@unique([elementId, spaceId])
}


model Element {
  id       String @id @unique @default(cuid())
  width    Int
  height   Int
  name     String
  imageUrl String

  SpaceElement SpaceElement[]

  mapElements mapElements[]
}

model Map {
  id     String  @id @unique @default(cuid())
  width  Int
  height Int
  backgroundImagePath String?
  name   String

  mapElements mapElements[]
}

model mapElements {
  id        String  @id @unique @default(cuid())
  mapId     String
  elementId String
  x         Int?
  y         Int?
  Map       Map     @relation(fields: [mapId], references: [id])
  Element   Element @relation(fields: [elementId], references: [id])
  @@unique([mapId, elementId])
}

model Avatar {
  id       String  @id @unique @default(cuid())
  imageUrl String?
  name     String?

  User User[]
}

enum Role {
  Admin
  User
}
enum SpaceRole {
  OWNER
  GENERAL_MEMBER
  GUEST
}